<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="AddInvoice" xml:space="preserve">
    <value>Add Invoice</value>
  </data>
  <data name="AddProduct" xml:space="preserve">
    <value>Add product</value>
  </data>
  <data name="AddUser" xml:space="preserve">
    <value>Add User</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>Admin</value>
  </data>
  <data name="BackToHome" xml:space="preserve">
    <value>Back to home</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Back to list</value>
  </data>
  <data name="CheckInbox" xml:space="preserve">
    <value>please check your inbox.</value>
  </data>
  <data name="ClickHere" xml:space="preserve">
    <value>Click here</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="ConfirmEmail" xml:space="preserve">
    <value>Confirm Email</value>
  </data>
  <data name="ConfirmMailMsg" xml:space="preserve">
    <value>We've sent you a verification code to your email</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Congratulations" xml:space="preserve">
    <value>Congratulations</value>
  </data>
  <data name="ContactUS" xml:space="preserve">
    <value>Contact US</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreatedDate" xml:space="preserve">
    <value>Created Date</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteConfirm" xml:space="preserve">
    <value>Are you sure you want to delete</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailExist" xml:space="preserve">
    <value>Email already exist</value>
  </data>
  <data name="EmailNotFound" xml:space="preserve">
    <value>Email not found</value>
  </data>
  <data name="EmptyTable" xml:space="preserve">
    <value>No data available in table</value>
  </data>
  <data name="EnterPrice" xml:space="preserve">
    <value>Please Enter Price</value>
  </data>
  <data name="EnterProductName" xml:space="preserve">
    <value>Please Enter Product Name</value>
  </data>
  <data name="EnterQuantity" xml:space="preserve">
    <value>Please Enter Quantity</value>
  </data>
  <data name="Entries" xml:space="preserve">
    <value>entries</value>
  </data>
  <data name="EntriesMenu" xml:space="preserve">
    <value>entries</value>
  </data>
  <data name="Excel" xml:space="preserve">
    <value>Excel</value>
  </data>
  <data name="FilteredFrom" xml:space="preserve">
    <value>filtered from</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="HomeAdminText" xml:space="preserve">
    <value>You are administrator, so you can manage the users and invoices actions.</value>
  </data>
  <data name="HomeUserText" xml:space="preserve">
    <value>We're glad to see you, if you have any questions feel free to contact us</value>
  </data>
  <data name="HomeWelcome" xml:space="preserve">
    <value>Welcome </value>
  </data>
  <data name="Inactive" xml:space="preserve">
    <value>Inactive</value>
  </data>
  <data name="InvalidCode" xml:space="preserve">
    <value>Invalid Code</value>
  </data>
  <data name="InvalidLogin" xml:space="preserve">
    <value>Username or password incorrect</value>
  </data>
  <data name="Invoice" xml:space="preserve">
    <value>Invoice</value>
  </data>
  <data name="Invoices" xml:space="preserve">
    <value>Invoices</value>
  </data>
  <data name="IsEmailConfirmed" xml:space="preserve">
    <value>IsEmailConfirmed</value>
  </data>
  <data name="ITRootsTask" xml:space="preserve">
    <value>ITRoots Task</value>
  </data>
  <data name="LE" xml:space="preserve">
    <value>L.E</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginToYourAccount" xml:space="preserve">
    <value>Login to your account</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="NOofProducts" xml:space="preserve">
    <value>NO of Products</value>
  </data>
  <data name="NoProducts" xml:space="preserve">
    <value>Please enter one product at least</value>
  </data>
  <data name="NotValidationPassed" xml:space="preserve">
    <value>Not Validation passed</value>
  </data>
  <data name="NotVerified" xml:space="preserve">
    <value>Please Verify your email first</value>
  </data>
  <data name="Of" xml:space="preserve">
    <value>of</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PDF" xml:space="preserve">
    <value>PDF</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="PhoneNumberExist" xml:space="preserve">
    <value>PhoneNumber already exist</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="Processing" xml:space="preserve">
    <value>Processing</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="Qunatity" xml:space="preserve">
    <value>Qunatity</value>
  </data>
  <data name="RecordsNotFound" xml:space="preserve">
    <value>No matching records found</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="ResetData" xml:space="preserve">
    <value>Clear Data</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="Showing" xml:space="preserve">
    <value>Showing</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="TotalEntries" xml:space="preserve">
    <value>total entries</value>
  </data>
  <data name="TotalPrice" xml:space="preserve">
    <value>Total price</value>
  </data>
  <data name="ToVerify" xml:space="preserve">
    <value>to verify your account</value>
  </data>
  <data name="UnAuthorizeText" xml:space="preserve">
    <value>You do not have permission to access this page. Please Login as admin to access the page.</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="UserManagement" xml:space="preserve">
    <value>User Management</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="UsernameExist" xml:space="preserve">
    <value>Username already exist</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="Users_Roles" xml:space="preserve">
    <value>Users Roles</value>
  </data>
  <data name="UserType" xml:space="preserve">
    <value>User Type</value>
  </data>
  <data name="ValidationPassed" xml:space="preserve">
    <value>Validation passed</value>
  </data>
  <data name="VerifyEmail" xml:space="preserve">
    <value>Verify Email</value>
  </data>
  <data name="VerifyEmailBody" xml:space="preserve">
    <value>Welcome, Kindly use this code to verify your email.</value>
  </data>
</root>